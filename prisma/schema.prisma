datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//? BEGIN > AUTHENTICATION

model Users {
  id                 Int       @id @default(autoincrement())
  email              String?   @unique
  password           String?
  fullname           String?
  nik                String?
  nisn               String?
  gender             Int?      @db.TinyInt //0: man | 1: women
  birth_place        String?
  birth_date         DateTime?
  religion           String?
  phone              String?
  social_assistences String?
  profile_pic_path   String?
  province           String?
  regency            String?
  subdistrict        String?
  village            String?
  postal_code        String?
  address            String?
  is_verified        Boolean   @default(false)
  role_id            Int
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt

  role          Roles          @relation(fields: [role_id], references: [id])
  user_mother   UserMothers?
  user_father   UserFathers?
  user_guardian UserGuardians?
  user_course   UserCourses?
  user_payment  UserPayments?

  @@map("users")
}

model UserMothers {
  id          Int       @id @default(autoincrement())
  user_id     Int       @unique
  name        String?
  job         String?
  income      BigInt?
  birth_place String?
  birth_date  DateTime?
  religion    String?
  phone       String?

  user Users @relation(fields: [user_id], references: [id])

  @@map("user_mothers")
}

model UserFathers {
  id          Int       @id @default(autoincrement())
  user_id     Int       @unique
  name        String?
  job         String?
  income      BigInt?
  birth_place String?
  birth_date  DateTime?
  religion    String?
  phone       String?

  user Users @relation(fields: [user_id], references: [id])

  @@map("user_fathers")
}

model UserGuardians {
  id             Int       @id @default(autoincrement())
  user_id        Int       @unique
  name           String?
  job            String?
  income         BigInt?
  birth_place    String?
  birth_date     DateTime?
  religion       String?
  phone          String?
  is_parent_date Boolean   @default(false)

  user Users @relation(fields: [user_id], references: [id])

  @@map("user_guardians")
}

model UserCourses {
  id        Int  @id @default(autoincrement())
  user_id   Int  @unique
  course_id Int?

  user   Users    @relation(fields: [user_id], references: [id])
  course Courses? @relation(fields: [course_id], references: [id])

  @@map("user_courses")
}

model UserPayments {
  id         Int     @id @default(autoincrement())
  user_id    Int     @unique
  payment_to String?

  user Users @relation(fields: [user_id], references: [id])

  @@map("user_payments")
}

model Roles {
  id         Int     @id @default(autoincrement())
  name       String
  code       String
  is_student Boolean

  users Users[]

  @@map("roles")
}

model Permissions {
  id Int @id @default(autoincrement())

  @@map("permissions")
}

model RolePermissions {
  id Int @id @default(autoincrement())

  @@map("role_permissions")
}

model Courses {
  id       Int    @id @default(autoincrement())
  name     String
  level    Int
  price    BigInt
  pic_path String

  user_courses UserCourses[]

  @@map("courses")
}

//? END > AUTHENTICATION

//? BEGIN > CONFIG LANDING PAGE
model ConfigHeroBanners {
  id          Int     @id @default(autoincrement())
  image_path  String?
  title       String
  description String

  @@map("config_hero_banner")
}

model ConfigAboutUs {
  id    Int    @id @default(autoincrement())
  title String

  @@map("config_about_us")
}

model ConfigVisions {
  id    Int    @id @default(autoincrement())
  title String

  @@map("config_vision")
}

model ConfigMissions {
  id          Int    @id @default(autoincrement())
  title       String
  description String

  @@map("config_mission")
}

model ConfigConfidenceAchievement {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  student     String
  industry    String
  graduate    String

  @@map("config_confidence_achievement")
}

model ConfigTraining {
  id          Int    @id @default(autoincrement())
  title       String
  description String

  training_items TrainingItems[]

  @@map("config_training")
}

model TrainingItems {
  id                 Int    @id @default(autoincrement())
  name               String
  config_training_id Int

  config_training ConfigTraining @relation(fields: [config_training_id], references: [id])

  @@map("training_items")
}

model ConfigTeams {
  id          Int    @id @default(autoincrement())
  title       String
  description String

  person_team PersonTeams[]

  @@map("config_teams")
}

model PersonTeams {
  id             Int     @id @default(autoincrement())
  image_path     String?
  fullname       String
  position       String
  config_team_id Int

  config_team ConfigTeams @relation(fields: [config_team_id], references: [id])

  @@map("person_teams")
}

model ConfigStudentCreations {
  id          Int    @id @default(autoincrement())
  title       String
  description String

  creations Creations[]

  @@map("config_student_creations")
}

model Creations {
  id                         Int    @id @default(autoincrement())
  image_path                 String
  config_student_creation_id Int

  config_student_creation ConfigStudentCreations @relation(fields: [config_student_creation_id], references: [id])

  @@map("creations")
}

model ConfigTestimonials {
  id          Int    @id @default(autoincrement())
  title       String
  description String

  testimonials Testimonials[]

  @@map("config_testimonials")
}

model Testimonials {
  id                    Int    @id @default(autoincrement())
  image_path            String
  fullname              String
  position              String
  detail                String @db.Text
  config_testimonial_id Int

  config_testimonial ConfigTestimonials @relation(fields: [config_testimonial_id], references: [id])

  @@map("testimonials")
}

model ConfigIndustries {
  id          Int    @id @default(autoincrement())
  title       String
  description String

  industries Industries[]

  @@map("config_industries")
}

model Industries {
  id                 Int    @id @default(autoincrement())
  image_path         String
  config_industry_id Int

  config_industry ConfigIndustries @relation(fields: [config_industry_id], references: [id])

  @@map("industries")
}

model ConfigFaqs {
  id         Int     @id @default(autoincrement())
  image_path String?
  title      String

  faqs Faqs[]

  @@map("config_faqs")
}

model Faqs {
  id            Int    @id @default(autoincrement())
  title         String
  description   String
  config_faq_id Int

  config_faq ConfigFaqs @relation(fields: [config_faq_id], references: [id])

  @@map("faqs")
}

model ConfigFooters {
  id      Int    @id @default(autoincrement())
  content String
  type    String //for email, title, phone, etc.

  @@map("config_footers")
}

//? END > CONFIG LANDING PAGE
